# idempotency_key: gh-actions-release-ghcr-v1
# timeout: 10s
# retries: 3
name: Release (Build and GHCR)

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DO_PUSH: ${{ secrets.GHCR_PUSH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        id: vars
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${{ github.repository }}" | awk -F/ '{print $2}' | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${OWNER}/${REPO}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (artifact)
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.vars.outputs.image }}:ci-${{ github.sha }}
          load: true

      - name: Save image tar
        run: docker save ${{ steps.vars.outputs.image }}:ci-${{ github.sha }} -o /tmp/image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tar-${{ github.sha }}
          path: /tmp/image.tar
          retention-days: 7

      - name: Login to GHCR
        if: env.DO_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push (GHCR)
        if: env.DO_PUSH == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.vars.outputs.image }}:latest
            ${{ steps.vars.outputs.image }}:${{ github.sha }}
